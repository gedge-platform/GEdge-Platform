apiVersion: v1
kind: ServiceAccount
metadata:
  name: gedge-worker-agent
  namespace: gedge-system-scheduler
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: gedge-worker-agent-node-role
rules:
- apiGroups: [""]
  resources: ["nodes","nodes/status"]
  verbs: ["list","get","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gedge-worker-agent-node-role-binding
subjects:
- kind: ServiceAccount
  name: gedge-worker-agent
  namespace: gedge-system-scheduler
roleRef:
  kind: ClusterRole
  name: gedge-worker-agent-node-role
  apiGroup: ""  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gedge-worker-agent-scheduler-role-binding
subjects:
- kind: ServiceAccount
  name: gedge-worker-agent
  namespace: gedge-system-scheduler
roleRef:
  kind: ClusterRole
  name: system:kube-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gedge-worker-agent-daemonset
  namespace: gedge-system-scheduler
spec:
  selector:
    matchLabels:
      app: gedge-worker-agent
  template:
    metadata:
      namespace: gedge-system-scheduler
      labels:
        app: gedge-worker-agent
    spec:
      terminationGracePeriodSeconds: 30
      tolerations:
      # this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can't run pods
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      serviceAccount: gedge-worker-agent
      containers:
      - name: gedge-worker-agent
        image: dockereyes/gedge-worker-agent
        env:
        - name: MONGODB_IP
          value: '129.254.202.128'
        - name: MONGODB_PORT
          value: '27017'
        ports:
        - containerPort: 5000
